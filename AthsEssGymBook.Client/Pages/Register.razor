@page "/register"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
<!-- h1 class="h2 font-weight-normal login-title">
    AE Gym Bookings
</!-h1 -->

    <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerParameters">
        <DataAnnotationsValidator />
        <h4 class="font-weight-normal text-center">Create Account</h4>

        <label for="inputUsername" class="sr-only">User Name</label>
        <InputText id="inputUsername" class="form-control" placeholder="Username" autofocus @bind-Value="@registerParameters.UserName" />
        <ValidationMessage For="@(() => registerParameters.UserName)" />

        <label for="inputPassword" class="sr-only">Password</label>
        <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="@registerParameters.Password" />
        <ValidationMessage For="@(() => registerParameters.Password)" />

        <label for="inputPasswordConfirm" class="sr-only">Password Confirmation</label>
        <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Password Confirmation" @bind-Value="@registerParameters.PasswordConfirm" />
        <ValidationMessage For="@(() => registerParameters.PasswordConfirm)" />

        <label for="inputEmail" class="sr-only">Email</label>
        <InputText type="email" id="inputEmail" class="form-control" placeholder="Email Address" autofocus @bind-Value="@registerParameters.Email" />
        <ValidationMessage For="@(() => registerParameters.Email)" />

        <label for="inputEmailConfirm" class="sr-only">Email Confirmation</label>
        <InputText type="email" id="inputEmailConfirm" class="form-control" placeholder="Email Confirmation" @bind-Value="@registerParameters.EmailConfirm" />
        <ValidationMessage For="@(() => registerParameters.EmailConfirm)" />

        <label for="inputPhone" class="sr-only">Phone <i>(Optional)</i></label>
        <InputText type="tel" id="inputPhone" class="form-control" placeholder="Mobile" autofocus @bind-Value="@registerParameters.Phone" />

        <div>
            <ul class="nav flex-column">
                <li class="nav-item px-3">
                    <div class="main">
                        <div class="content px-4">
                            <button class="btn btn-lg btn-primary btn-block" type="submit">Create account</button>
                        </div>
                    </div>
                </li>
                <li class="nav-item px-3">
                    <div class="main">
                        <div class="content px-4">
                            <button type="button" class="btn btn-lg btn-secondary btn-block" @onclick="@LoginClick">Have account</button>
                        </div>
                    </div>
                </li>
                <li class="nav-item px-3">
                    <div class="main">
                        <div class="content px-4">
                            <button type="button" class="btn btn-lg btn-secondary btn-block" @onclick="@ForgotPwdClick">Forgot Pwd</button>
                        </div>
                    </div>
                </li>
            </ul>
        </div>


        <label class="text-danger">@error</label>

    </EditForm>


@functions{

    RegisterParameters registerParameters { get; set; } = new RegisterParameters();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerParameters);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    protected void LoginClick()
    {
        navigationManager.NavigateTo("/login");
    }
    protected void ForgotPwdClick()
    {
        navigationManager.NavigateTo("/forgotpwd");
    }
}